// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.3
// source: buildman.proto

package buildman_pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buildman_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_buildman_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_buildman_proto_rawDescGZIP(), []int{0}
}

type PingReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reply string `protobuf:"bytes,1,opt,name=reply,proto3" json:"reply,omitempty"`
}

func (x *PingReply) Reset() {
	*x = PingReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buildman_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingReply) ProtoMessage() {}

func (x *PingReply) ProtoReflect() protoreflect.Message {
	mi := &file_buildman_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingReply.ProtoReflect.Descriptor instead.
func (*PingReply) Descriptor() ([]byte, []int) {
	return file_buildman_proto_rawDescGZIP(), []int{1}
}

func (x *PingReply) GetReply() string {
	if x != nil {
		return x.Reply
	}
	return ""
}

type BuildJobArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegisterJwt string `protobuf:"bytes,1,opt,name=register_jwt,json=registerJwt,proto3" json:"register_jwt,omitempty"`
}

func (x *BuildJobArgs) Reset() {
	*x = BuildJobArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buildman_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildJobArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildJobArgs) ProtoMessage() {}

func (x *BuildJobArgs) ProtoReflect() protoreflect.Message {
	mi := &file_buildman_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildJobArgs.ProtoReflect.Descriptor instead.
func (*BuildJobArgs) Descriptor() ([]byte, []int) {
	return file_buildman_proto_rawDescGZIP(), []int{2}
}

func (x *BuildJobArgs) GetRegisterJwt() string {
	if x != nil {
		return x.RegisterJwt
	}
	return ""
}

type BuildPack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobJwt string `protobuf:"bytes,1,opt,name=job_jwt,json=jobJwt,proto3" json:"job_jwt,omitempty"`
	// Types that are assignable to BuildPack:
	//	*BuildPack_PackageUrl
	//	*BuildPack_GitPackage_
	BuildPack      isBuildPack_BuildPack `protobuf_oneof:"build_pack"`
	Context        string                `protobuf:"bytes,4,opt,name=context,proto3" json:"context,omitempty"`
	DockerfilePath string                `protobuf:"bytes,5,opt,name=dockerfile_path,json=dockerfilePath,proto3" json:"dockerfile_path,omitempty"`
	Repository     string                `protobuf:"bytes,6,opt,name=repository,proto3" json:"repository,omitempty"`
	Registry       string                `protobuf:"bytes,7,opt,name=registry,proto3" json:"registry,omitempty"`
	PullToken      string                `protobuf:"bytes,8,opt,name=pull_token,json=pullToken,proto3" json:"pull_token,omitempty"`
	PushToken      string                `protobuf:"bytes,9,opt,name=push_token,json=pushToken,proto3" json:"push_token,omitempty"`
	TagNames       []string              `protobuf:"bytes,10,rep,name=tag_names,json=tagNames,proto3" json:"tag_names,omitempty"`
	BaseImage      *BuildPack_BaseImage  `protobuf:"bytes,11,opt,name=base_image,json=baseImage,proto3" json:"base_image,omitempty"`
}

func (x *BuildPack) Reset() {
	*x = BuildPack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buildman_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildPack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildPack) ProtoMessage() {}

func (x *BuildPack) ProtoReflect() protoreflect.Message {
	mi := &file_buildman_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildPack.ProtoReflect.Descriptor instead.
func (*BuildPack) Descriptor() ([]byte, []int) {
	return file_buildman_proto_rawDescGZIP(), []int{3}
}

func (x *BuildPack) GetJobJwt() string {
	if x != nil {
		return x.JobJwt
	}
	return ""
}

func (m *BuildPack) GetBuildPack() isBuildPack_BuildPack {
	if m != nil {
		return m.BuildPack
	}
	return nil
}

func (x *BuildPack) GetPackageUrl() string {
	if x, ok := x.GetBuildPack().(*BuildPack_PackageUrl); ok {
		return x.PackageUrl
	}
	return ""
}

func (x *BuildPack) GetGitPackage() *BuildPack_GitPackage {
	if x, ok := x.GetBuildPack().(*BuildPack_GitPackage_); ok {
		return x.GitPackage
	}
	return nil
}

func (x *BuildPack) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

func (x *BuildPack) GetDockerfilePath() string {
	if x != nil {
		return x.DockerfilePath
	}
	return ""
}

func (x *BuildPack) GetRepository() string {
	if x != nil {
		return x.Repository
	}
	return ""
}

func (x *BuildPack) GetRegistry() string {
	if x != nil {
		return x.Registry
	}
	return ""
}

func (x *BuildPack) GetPullToken() string {
	if x != nil {
		return x.PullToken
	}
	return ""
}

func (x *BuildPack) GetPushToken() string {
	if x != nil {
		return x.PushToken
	}
	return ""
}

func (x *BuildPack) GetTagNames() []string {
	if x != nil {
		return x.TagNames
	}
	return nil
}

func (x *BuildPack) GetBaseImage() *BuildPack_BaseImage {
	if x != nil {
		return x.BaseImage
	}
	return nil
}

type isBuildPack_BuildPack interface {
	isBuildPack_BuildPack()
}

type BuildPack_PackageUrl struct {
	PackageUrl string `protobuf:"bytes,2,opt,name=package_url,json=packageUrl,proto3,oneof"`
}

type BuildPack_GitPackage_ struct {
	GitPackage *BuildPack_GitPackage `protobuf:"bytes,3,opt,name=git_package,json=gitPackage,proto3,oneof"`
}

func (*BuildPack_PackageUrl) isBuildPack_BuildPack() {}

func (*BuildPack_GitPackage_) isBuildPack_BuildPack() {}

type HeartbeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobJwt string `protobuf:"bytes,1,opt,name=job_jwt,json=jobJwt,proto3" json:"job_jwt,omitempty"`
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buildman_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_buildman_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_buildman_proto_rawDescGZIP(), []int{4}
}

func (x *HeartbeatRequest) GetJobJwt() string {
	if x != nil {
		return x.JobJwt
	}
	return ""
}

type HeartbeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reply bool `protobuf:"varint,1,opt,name=reply,proto3" json:"reply,omitempty"`
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buildman_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_buildman_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_buildman_proto_rawDescGZIP(), []int{5}
}

func (x *HeartbeatResponse) GetReply() bool {
	if x != nil {
		return x.Reply
	}
	return false
}

type LogMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobJwt         string `protobuf:"bytes,1,opt,name=job_jwt,json=jobJwt,proto3" json:"job_jwt,omitempty"`
	SequenceNumber int32  `protobuf:"varint,2,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	LogMessage     string `protobuf:"bytes,3,opt,name=log_message,json=logMessage,proto3" json:"log_message,omitempty"`
	Phase          string `protobuf:"bytes,4,opt,name=phase,proto3" json:"phase,omitempty"`
}

func (x *LogMessageRequest) Reset() {
	*x = LogMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buildman_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogMessageRequest) ProtoMessage() {}

func (x *LogMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_buildman_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogMessageRequest.ProtoReflect.Descriptor instead.
func (*LogMessageRequest) Descriptor() ([]byte, []int) {
	return file_buildman_proto_rawDescGZIP(), []int{6}
}

func (x *LogMessageRequest) GetJobJwt() string {
	if x != nil {
		return x.JobJwt
	}
	return ""
}

func (x *LogMessageRequest) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *LogMessageRequest) GetLogMessage() string {
	if x != nil {
		return x.LogMessage
	}
	return ""
}

func (x *LogMessageRequest) GetPhase() string {
	if x != nil {
		return x.Phase
	}
	return ""
}

type LogMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Succeeded      bool  `protobuf:"varint,1,opt,name=succeeded,proto3" json:"succeeded,omitempty"`
	SequenceNumber int32 `protobuf:"varint,2,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
}

func (x *LogMessageResponse) Reset() {
	*x = LogMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buildman_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogMessageResponse) ProtoMessage() {}

func (x *LogMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_buildman_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogMessageResponse.ProtoReflect.Descriptor instead.
func (*LogMessageResponse) Descriptor() ([]byte, []int) {
	return file_buildman_proto_rawDescGZIP(), []int{7}
}

func (x *LogMessageResponse) GetSucceeded() bool {
	if x != nil {
		return x.Succeeded
	}
	return false
}

func (x *LogMessageResponse) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

type CachedTagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandComments string `protobuf:"bytes,1,opt,name=command_comments,json=commandComments,proto3" json:"command_comments,omitempty"`
	BaseImageName   string `protobuf:"bytes,2,opt,name=base_image_name,json=baseImageName,proto3" json:"base_image_name,omitempty"`
	BaseImageTag    string `protobuf:"bytes,3,opt,name=base_image_tag,json=baseImageTag,proto3" json:"base_image_tag,omitempty"`
	BaseImageId     string `protobuf:"bytes,4,opt,name=base_image_id,json=baseImageId,proto3" json:"base_image_id,omitempty"`
}

func (x *CachedTagRequest) Reset() {
	*x = CachedTagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buildman_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CachedTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CachedTagRequest) ProtoMessage() {}

func (x *CachedTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_buildman_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CachedTagRequest.ProtoReflect.Descriptor instead.
func (*CachedTagRequest) Descriptor() ([]byte, []int) {
	return file_buildman_proto_rawDescGZIP(), []int{8}
}

func (x *CachedTagRequest) GetCommandComments() string {
	if x != nil {
		return x.CommandComments
	}
	return ""
}

func (x *CachedTagRequest) GetBaseImageName() string {
	if x != nil {
		return x.BaseImageName
	}
	return ""
}

func (x *CachedTagRequest) GetBaseImageTag() string {
	if x != nil {
		return x.BaseImageTag
	}
	return ""
}

func (x *CachedTagRequest) GetBaseImageId() string {
	if x != nil {
		return x.BaseImageId
	}
	return ""
}

type CachedTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CachedTag string `protobuf:"bytes,1,opt,name=CachedTag,proto3" json:"CachedTag,omitempty"`
}

func (x *CachedTag) Reset() {
	*x = CachedTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buildman_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CachedTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CachedTag) ProtoMessage() {}

func (x *CachedTag) ProtoReflect() protoreflect.Message {
	mi := &file_buildman_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CachedTag.ProtoReflect.Descriptor instead.
func (*CachedTag) Descriptor() ([]byte, []int) {
	return file_buildman_proto_rawDescGZIP(), []int{9}
}

func (x *CachedTag) GetCachedTag() string {
	if x != nil {
		return x.CachedTag
	}
	return ""
}

type BuildPack_BaseImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *BuildPack_BaseImage) Reset() {
	*x = BuildPack_BaseImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buildman_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildPack_BaseImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildPack_BaseImage) ProtoMessage() {}

func (x *BuildPack_BaseImage) ProtoReflect() protoreflect.Message {
	mi := &file_buildman_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildPack_BaseImage.ProtoReflect.Descriptor instead.
func (*BuildPack_BaseImage) Descriptor() ([]byte, []int) {
	return file_buildman_proto_rawDescGZIP(), []int{3, 0}
}

func (x *BuildPack_BaseImage) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *BuildPack_BaseImage) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type BuildPack_GitPackage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url        string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Sha        string `protobuf:"bytes,2,opt,name=sha,proto3" json:"sha,omitempty"`
	PrivateKey string `protobuf:"bytes,3,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
}

func (x *BuildPack_GitPackage) Reset() {
	*x = BuildPack_GitPackage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buildman_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildPack_GitPackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildPack_GitPackage) ProtoMessage() {}

func (x *BuildPack_GitPackage) ProtoReflect() protoreflect.Message {
	mi := &file_buildman_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildPack_GitPackage.ProtoReflect.Descriptor instead.
func (*BuildPack_GitPackage) Descriptor() ([]byte, []int) {
	return file_buildman_proto_rawDescGZIP(), []int{3, 1}
}

func (x *BuildPack_GitPackage) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *BuildPack_GitPackage) GetSha() string {
	if x != nil {
		return x.Sha
	}
	return ""
}

func (x *BuildPack_GitPackage) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

var File_buildman_proto protoreflect.FileDescriptor

var file_buildman_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x6d, 0x61, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0b, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x6d, 0x61, 0x6e, 0x5f, 0x70, 0x62, 0x22, 0x0d, 0x0a,
	0x0b, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x21, 0x0a, 0x09,
	0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x31, 0x0a, 0x0c, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x4a, 0x6f, 0x62, 0x41, 0x72, 0x67, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6a, 0x77, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4a,
	0x77, 0x74, 0x22, 0xce, 0x04, 0x0a, 0x09, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x61, 0x63, 0x6b,
	0x12, 0x17, 0x0a, 0x07, 0x6a, 0x6f, 0x62, 0x5f, 0x6a, 0x77, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6a, 0x6f, 0x62, 0x4a, 0x77, 0x74, 0x12, 0x21, 0x0a, 0x0b, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x44, 0x0a, 0x0b,
	0x67, 0x69, 0x74, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x6d, 0x61, 0x6e, 0x5f, 0x70, 0x62, 0x2e,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x2e, 0x47, 0x69, 0x74, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x67, 0x69, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x27, 0x0a, 0x0f,
	0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x66, 0x69, 0x6c,
	0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x6c, 0x6c, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x6c, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x61, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x0a,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x6d, 0x61, 0x6e, 0x5f, 0x70, 0x62, 0x2e, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x09, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x1a, 0x43, 0x0a,
	0x09, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x1a, 0x51, 0x0a, 0x0a, 0x47, 0x69, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x68, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x73, 0x68, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x4b, 0x65, 0x79, 0x42, 0x0c, 0x0a, 0x0a, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x70,
	0x61, 0x63, 0x6b, 0x22, 0x2b, 0x0a, 0x10, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6a, 0x6f, 0x62, 0x5f, 0x6a,
	0x77, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6a, 0x6f, 0x62, 0x4a, 0x77, 0x74,
	0x22, 0x29, 0x0a, 0x11, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x8c, 0x01, 0x0a, 0x11,
	0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x6a, 0x6f, 0x62, 0x5f, 0x6a, 0x77, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6a, 0x6f, 0x62, 0x4a, 0x77, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x67, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x22, 0x5b, 0x0a, 0x12, 0x4c, 0x6f,
	0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x12, 0x27,
	0x0a, 0x0f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xaf, 0x01, 0x0a, 0x10, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x64, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x10,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x24, 0x0a, 0x0e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x61,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x54, 0x61, 0x67, 0x12, 0x22, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x61,
	0x73, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0x29, 0x0a, 0x09, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x64, 0x54, 0x61, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64,
	0x54, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x64, 0x54, 0x61, 0x67, 0x32, 0x89, 0x03, 0x0a, 0x0c, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x2e,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x6d, 0x61, 0x6e, 0x5f, 0x70, 0x62, 0x2e, 0x50, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x6d,
	0x61, 0x6e, 0x5f, 0x70, 0x62, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x47, 0x0a, 0x10, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x4a, 0x6f, 0x62, 0x12, 0x19, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x6d, 0x61, 0x6e,
	0x5f, 0x70, 0x62, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x4a, 0x6f, 0x62, 0x41, 0x72, 0x67, 0x73,
	0x1a, 0x16, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x6d, 0x61, 0x6e, 0x5f, 0x70, 0x62, 0x2e, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x09, 0x48, 0x65,
	0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x1d, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x6d,
	0x61, 0x6e, 0x5f, 0x70, 0x62, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x6d, 0x61,
	0x6e, 0x5f, 0x70, 0x62, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x53, 0x0a, 0x0a,
	0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x2e, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x6d, 0x61, 0x6e, 0x5f, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x6d, 0x61, 0x6e, 0x5f, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30,
	0x01, 0x12, 0x4d, 0x0a, 0x12, 0x44, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x64, 0x54, 0x61, 0x67, 0x12, 0x1d, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x6d,
	0x61, 0x6e, 0x5f, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x54, 0x61, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x6d, 0x61,
	0x6e, 0x5f, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x54, 0x61, 0x67, 0x22, 0x00,
	0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x71,
	0x75, 0x61, 0x79, 0x2f, 0x71, 0x75, 0x61, 0x79, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x6d, 0x61,
	0x6e, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x6d, 0x61, 0x6e, 0x5f, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_buildman_proto_rawDescOnce sync.Once
	file_buildman_proto_rawDescData = file_buildman_proto_rawDesc
)

func file_buildman_proto_rawDescGZIP() []byte {
	file_buildman_proto_rawDescOnce.Do(func() {
		file_buildman_proto_rawDescData = protoimpl.X.CompressGZIP(file_buildman_proto_rawDescData)
	})
	return file_buildman_proto_rawDescData
}

var file_buildman_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_buildman_proto_goTypes = []interface{}{
	(*PingRequest)(nil),          // 0: buildman_pb.PingRequest
	(*PingReply)(nil),            // 1: buildman_pb.PingReply
	(*BuildJobArgs)(nil),         // 2: buildman_pb.BuildJobArgs
	(*BuildPack)(nil),            // 3: buildman_pb.BuildPack
	(*HeartbeatRequest)(nil),     // 4: buildman_pb.HeartbeatRequest
	(*HeartbeatResponse)(nil),    // 5: buildman_pb.HeartbeatResponse
	(*LogMessageRequest)(nil),    // 6: buildman_pb.LogMessageRequest
	(*LogMessageResponse)(nil),   // 7: buildman_pb.LogMessageResponse
	(*CachedTagRequest)(nil),     // 8: buildman_pb.CachedTagRequest
	(*CachedTag)(nil),            // 9: buildman_pb.CachedTag
	(*BuildPack_BaseImage)(nil),  // 10: buildman_pb.BuildPack.BaseImage
	(*BuildPack_GitPackage)(nil), // 11: buildman_pb.BuildPack.GitPackage
}
var file_buildman_proto_depIdxs = []int32{
	11, // 0: buildman_pb.BuildPack.git_package:type_name -> buildman_pb.BuildPack.GitPackage
	10, // 1: buildman_pb.BuildPack.base_image:type_name -> buildman_pb.BuildPack.BaseImage
	0,  // 2: buildman_pb.BuildManager.Ping:input_type -> buildman_pb.PingRequest
	2,  // 3: buildman_pb.BuildManager.RegisterBuildJob:input_type -> buildman_pb.BuildJobArgs
	4,  // 4: buildman_pb.BuildManager.Heartbeat:input_type -> buildman_pb.HeartbeatRequest
	6,  // 5: buildman_pb.BuildManager.LogMessage:input_type -> buildman_pb.LogMessageRequest
	8,  // 6: buildman_pb.BuildManager.DetermineCachedTag:input_type -> buildman_pb.CachedTagRequest
	1,  // 7: buildman_pb.BuildManager.Ping:output_type -> buildman_pb.PingReply
	3,  // 8: buildman_pb.BuildManager.RegisterBuildJob:output_type -> buildman_pb.BuildPack
	5,  // 9: buildman_pb.BuildManager.Heartbeat:output_type -> buildman_pb.HeartbeatResponse
	7,  // 10: buildman_pb.BuildManager.LogMessage:output_type -> buildman_pb.LogMessageResponse
	9,  // 11: buildman_pb.BuildManager.DetermineCachedTag:output_type -> buildman_pb.CachedTag
	7,  // [7:12] is the sub-list for method output_type
	2,  // [2:7] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_buildman_proto_init() }
func file_buildman_proto_init() {
	if File_buildman_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_buildman_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buildman_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buildman_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildJobArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buildman_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildPack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buildman_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buildman_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buildman_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buildman_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buildman_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CachedTagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buildman_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CachedTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buildman_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildPack_BaseImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buildman_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildPack_GitPackage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_buildman_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*BuildPack_PackageUrl)(nil),
		(*BuildPack_GitPackage_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_buildman_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_buildman_proto_goTypes,
		DependencyIndexes: file_buildman_proto_depIdxs,
		MessageInfos:      file_buildman_proto_msgTypes,
	}.Build()
	File_buildman_proto = out.File
	file_buildman_proto_rawDesc = nil
	file_buildman_proto_goTypes = nil
	file_buildman_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BuildManagerClient is the client API for BuildManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BuildManagerClient interface {
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingReply, error)
	RegisterBuildJob(ctx context.Context, in *BuildJobArgs, opts ...grpc.CallOption) (*BuildPack, error)
	Heartbeat(ctx context.Context, opts ...grpc.CallOption) (BuildManager_HeartbeatClient, error)
	LogMessage(ctx context.Context, opts ...grpc.CallOption) (BuildManager_LogMessageClient, error)
	DetermineCachedTag(ctx context.Context, in *CachedTagRequest, opts ...grpc.CallOption) (*CachedTag, error)
}

type buildManagerClient struct {
	cc grpc.ClientConnInterface
}

func NewBuildManagerClient(cc grpc.ClientConnInterface) BuildManagerClient {
	return &buildManagerClient{cc}
}

func (c *buildManagerClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingReply, error) {
	out := new(PingReply)
	err := c.cc.Invoke(ctx, "/buildman_pb.BuildManager/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildManagerClient) RegisterBuildJob(ctx context.Context, in *BuildJobArgs, opts ...grpc.CallOption) (*BuildPack, error) {
	out := new(BuildPack)
	err := c.cc.Invoke(ctx, "/buildman_pb.BuildManager/RegisterBuildJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildManagerClient) Heartbeat(ctx context.Context, opts ...grpc.CallOption) (BuildManager_HeartbeatClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BuildManager_serviceDesc.Streams[0], "/buildman_pb.BuildManager/Heartbeat", opts...)
	if err != nil {
		return nil, err
	}
	x := &buildManagerHeartbeatClient{stream}
	return x, nil
}

type BuildManager_HeartbeatClient interface {
	Send(*HeartbeatRequest) error
	Recv() (*HeartbeatResponse, error)
	grpc.ClientStream
}

type buildManagerHeartbeatClient struct {
	grpc.ClientStream
}

func (x *buildManagerHeartbeatClient) Send(m *HeartbeatRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *buildManagerHeartbeatClient) Recv() (*HeartbeatResponse, error) {
	m := new(HeartbeatResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *buildManagerClient) LogMessage(ctx context.Context, opts ...grpc.CallOption) (BuildManager_LogMessageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BuildManager_serviceDesc.Streams[1], "/buildman_pb.BuildManager/LogMessage", opts...)
	if err != nil {
		return nil, err
	}
	x := &buildManagerLogMessageClient{stream}
	return x, nil
}

type BuildManager_LogMessageClient interface {
	Send(*LogMessageRequest) error
	Recv() (*LogMessageResponse, error)
	grpc.ClientStream
}

type buildManagerLogMessageClient struct {
	grpc.ClientStream
}

func (x *buildManagerLogMessageClient) Send(m *LogMessageRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *buildManagerLogMessageClient) Recv() (*LogMessageResponse, error) {
	m := new(LogMessageResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *buildManagerClient) DetermineCachedTag(ctx context.Context, in *CachedTagRequest, opts ...grpc.CallOption) (*CachedTag, error) {
	out := new(CachedTag)
	err := c.cc.Invoke(ctx, "/buildman_pb.BuildManager/DetermineCachedTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BuildManagerServer is the server API for BuildManager service.
type BuildManagerServer interface {
	Ping(context.Context, *PingRequest) (*PingReply, error)
	RegisterBuildJob(context.Context, *BuildJobArgs) (*BuildPack, error)
	Heartbeat(BuildManager_HeartbeatServer) error
	LogMessage(BuildManager_LogMessageServer) error
	DetermineCachedTag(context.Context, *CachedTagRequest) (*CachedTag, error)
}

// UnimplementedBuildManagerServer can be embedded to have forward compatible implementations.
type UnimplementedBuildManagerServer struct {
}

func (*UnimplementedBuildManagerServer) Ping(context.Context, *PingRequest) (*PingReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedBuildManagerServer) RegisterBuildJob(context.Context, *BuildJobArgs) (*BuildPack, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterBuildJob not implemented")
}
func (*UnimplementedBuildManagerServer) Heartbeat(BuildManager_HeartbeatServer) error {
	return status.Errorf(codes.Unimplemented, "method Heartbeat not implemented")
}
func (*UnimplementedBuildManagerServer) LogMessage(BuildManager_LogMessageServer) error {
	return status.Errorf(codes.Unimplemented, "method LogMessage not implemented")
}
func (*UnimplementedBuildManagerServer) DetermineCachedTag(context.Context, *CachedTagRequest) (*CachedTag, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DetermineCachedTag not implemented")
}

func RegisterBuildManagerServer(s *grpc.Server, srv BuildManagerServer) {
	s.RegisterService(&_BuildManager_serviceDesc, srv)
}

func _BuildManager_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildManagerServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/buildman_pb.BuildManager/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildManagerServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BuildManager_RegisterBuildJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuildJobArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildManagerServer).RegisterBuildJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/buildman_pb.BuildManager/RegisterBuildJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildManagerServer).RegisterBuildJob(ctx, req.(*BuildJobArgs))
	}
	return interceptor(ctx, in, info, handler)
}

func _BuildManager_Heartbeat_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(BuildManagerServer).Heartbeat(&buildManagerHeartbeatServer{stream})
}

type BuildManager_HeartbeatServer interface {
	Send(*HeartbeatResponse) error
	Recv() (*HeartbeatRequest, error)
	grpc.ServerStream
}

type buildManagerHeartbeatServer struct {
	grpc.ServerStream
}

func (x *buildManagerHeartbeatServer) Send(m *HeartbeatResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *buildManagerHeartbeatServer) Recv() (*HeartbeatRequest, error) {
	m := new(HeartbeatRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _BuildManager_LogMessage_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(BuildManagerServer).LogMessage(&buildManagerLogMessageServer{stream})
}

type BuildManager_LogMessageServer interface {
	Send(*LogMessageResponse) error
	Recv() (*LogMessageRequest, error)
	grpc.ServerStream
}

type buildManagerLogMessageServer struct {
	grpc.ServerStream
}

func (x *buildManagerLogMessageServer) Send(m *LogMessageResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *buildManagerLogMessageServer) Recv() (*LogMessageRequest, error) {
	m := new(LogMessageRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _BuildManager_DetermineCachedTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CachedTagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildManagerServer).DetermineCachedTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/buildman_pb.BuildManager/DetermineCachedTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildManagerServer).DetermineCachedTag(ctx, req.(*CachedTagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BuildManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "buildman_pb.BuildManager",
	HandlerType: (*BuildManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _BuildManager_Ping_Handler,
		},
		{
			MethodName: "RegisterBuildJob",
			Handler:    _BuildManager_RegisterBuildJob_Handler,
		},
		{
			MethodName: "DetermineCachedTag",
			Handler:    _BuildManager_DetermineCachedTag_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Heartbeat",
			Handler:       _BuildManager_Heartbeat_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "LogMessage",
			Handler:       _BuildManager_LogMessage_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "buildman.proto",
}
